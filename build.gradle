plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'java-library'
    id 'com.diffplug.gradle.spotless' version '3.23.1'
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
mainClassName = 'edu.wpi.cs3733.c20.teamU.Main'


repositories {
    mavenCentral()
    jcenter()
    google()
    mavenLocal()
    maven {
        url 'https://apisite.crmyers.dev/maven'
    }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation(
            [group: 'edu.wpi.cs3733.d18.teamG', name: 'FoodRequest', version:'1.0.0'],
            [group: "com.twilio.sdk", name: "twilio", version: "7.42.0"],
//            [group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0'],
//            [group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'],
            [group: 'com.github.prominence', name: 'openweathermap-api', version: '1.0'],
            [group: 'net.kurobako', name: 'gesturefx', version: '0.5.0'],

            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.9'],

            // You may comment out the database dependency you do not use
            [group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'],
            [group: 'org.apache.derby',name: 'derby', version: '10.14.2.0'],
            [group: 'org.controlsfx', name: 'controlsfx', version: '8.40.16'],
            [group: 'com.google.cloud', name: 'google-cloud-speech', version: '0.80.0-beta'],
            [group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'],
            [group: 'org.slf4j', name: 'slf4j-simple', version:'1.6.4']
    )

    compile 'com.warrenstrange:googleauth:1.4.0'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'
    compileOnly(
            [group: 'org.projectlombok', name: 'lombok', version: '1.18.8']
    )

    annotationProcessor(
            [group: 'org.projectlombok', name: 'lombok', version: '1.18.8']
    )

    testImplementation(
            [group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.0'],
            [group: 'org.testfx', name: 'testfx-junit5', version: '4.0.16-alpha']
    )
    testRuntimeOnly(
            [group: 'org.testfx', name: 'openjfx-monocle', version: '8u76-b04']
    )
}

test {
    useJUnitPlatform()
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            excludes = [
                    'edu.wpi.cs3733.c20.teamU.App',
                    'edu.wpi.cs3733.c20.teamU.Main'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.cs3733.c20.teamU.App',
                    'edu.wpi.cs3733.c20.teamU.Main'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.cs3733.c20.teamU.App',
                    'edu.wpi.cs3733.c20.teamU.Main'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport

// uncomment to enable spotless checking
//spotless {
//    java {
//        googleJavaFormat()
//    }
//}
